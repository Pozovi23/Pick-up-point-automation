name: Python CI Pipeline

on:
  push:
    branches: [robot_code]
  pull_request:
    branches: [robot_code]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: robot
          POSTGRES_PASSWORD: Access_for_robot_12345
          POSTGRES_DB: warehouse_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev python3-dev postgresql-client

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary pytest requests
        pip install -e .

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U robot; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 2
        done

    - name: Initialize test database
      env:
        PGUSER: robot
        PGPASSWORD: Access_for_robot_12345
        PGHOST: localhost
        PGPORT: 5432
      run: |
        psql -d postgres -c "DO \$\$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_database WHERE datname = 'warehouse_db') THEN CREATE DATABASE warehouse_db; END IF; END \$\$;"
        psql -d warehouse_db -c "CREATE EXTENSION IF NOT EXISTS pgcrypto;"

    - name: Prepare test data
      run: |
        python -c "from src.database_manager import DatabaseManager; DatabaseManager.initialize(force_recreate=True)"

    - name: Run tests
      env:
        PYTHONPATH: ${{ github.workspace }}/src
        PGUSER: robot
        PGPASSWORD: Access_for_robot_12345
        PGHOST: localhost
        PGPORT: 5432
        PGDATABASE: warehouse_db
      run: |
        pytest -v tests/
